knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(gender)
library(knitr)
library(sf)
fms_clean <- read_csv("./Data/clean_fms.csv")
schools <- read_csv("Data/edubasealldata20200621.csv") %>%
clean_names() %>%
filter(!type_of_establishment_name %in% c("MiscellaneousSpecial",
"post 16 institution",
"Further education",
"Secure units",
"Higher education institutions",
"University technical college",
"City technology college")) %>%
select(establishment_name, easting, northing) %>%
drop_na()
schools
schools%>%
st_as_sf(coords = c("easting", "northing"), crs = 27700) %>%
st_transform(4326) %>%
st_coordinates() %>%
as_tibble() %>%
transmute(school_name = schools$establishment_name,
lat = Y,
lng = X
)
View(schools)
schools
schools <- schools%>%
st_as_sf(coords = c("easting", "northing"), crs = 27700) %>%
st_transform(4326) %>%
st_coordinates() %>%
as_tibble() %>%
transmute(school_name = schools$establishment_name,
lat = Y,
lng = X
)
schools
#create row_id's, and make it a simple (spatial) feature
list1.sf <- schools %>%
mutate( id = row_number() ) %>%
st_as_sf( coords = c("lng", "lat"), crs = 4326 )
list2.sf <- schools%>%
mutate( id = row_number() ) %>%
st_as_sf( coords = c("lng", "lat"), crs = 4326 )
#find nearest points in list2 for each id in list1, and as a bonus, calculate the distance to this point
list1.sf %>%
dplyr::group_by( id ) %>%
dplyr::mutate( np = sf::st_nearest_feature( geometry, list2.sf ),
dist_np = as.numeric( sf::st_distance( geometry, list2.sf[np,] ) ) )
View(fms_clean)
View(fms_clean)
#create row_id's, and make it a simple (spatial) feature
list1.sf <- fms_clean %>%
drop_na() %>%
mutate( id = row_number() ) %>%
st_as_sf( coords = c("lng", "lat"), crs = 4326 )
View(list1.sf)
View(fms_clean)
#create row_id's, and make it a simple (spatial) feature
fms_clean <- fms_clean %>%
mutate( id = row_number() ) %>%
st_as_sf( coords = c("lng", "lat"), crs = 4326 )
View(fms_clean)
#find nearest points in list2 for each id in list1, and as a bonus, calculate the distance to this point
fms_clean %>%
dplyr::group_by( id ) %>%
dplyr::mutate( np = sf::st_nearest_feature( geometry, list2.sf ),
dist_np = as.numeric( sf::st_distance( geometry, list2.sf[np,] ) ) )
View(list2.sf)
#create row_id's, and make it a simple (spatial) feature
fms_clean <- fms_clean %>%
mutate( id = row_number() ) %>%
st_as_sf( coords = c("lng", "lat"), crs = 4326 )
list2.sf <- schools%>%
mutate( id = row_number()) %>%
st_as_sf( coords = c("lng", "lat"), crs = 4326 )
#find nearest points in list2 for each id in list1, and as a bonus, calculate the distance to this point
x <- fms_clean %>%
group_by( id ) %>%
mutate( x = st_nearest_feature( geometry, list2.sf ),
distance = as.numeric( st_distance( geometry, list2.sf[np,] ) ),
)
write.csv(x,'x.csv')
View(fms_clean)
fms_sample <- sample_n(fms_clean)
fms_sample <- sample_n(fms_clean, 100)
x <- fms_sample %>%
group_by( id ) %>%
mutate(nearest_school = st_nearest_feature( geometry, schools.sf ),
distance_from _school = as.numeric( st_distance( geometry, schools.sf[np,] ) ),
)
x <- fms_sample %>%
group_by( id ) %>%
mutate(nearest_school = st_nearest_feature( geometry, schools.sf ),
distance_from _school = as.numeric( st_distance( geometry, schools.sf[np,] ) ),
)
x <- fms_sample %>%
group_by( id ) %>%
mutate(nearest_school = st_nearest_feature( geometry, schools.sf ),
distance_from_school = as.numeric( st_distance( geometry, schools.sf[np,] ) ),
)
schools.sf <- schools%>%
mutate( id = row_number()) %>%
st_as_sf( coords = c("lng", "lat"), crs = 4326 )
x <- fms_sample %>%
group_by( id ) %>%
mutate(nearest_school = st_nearest_feature( geometry, schools.sf ),
distance_from_school = as.numeric( st_distance( geometry, schools.sf[np,] ) ),
)
rlang::last_error()
x <- fms_sample %>%
group_by( id ) %>%
mutate(nearest_school = st_nearest_feature( geometry, schools.sf ),
distance_from_school = as.numeric( st_distance( geometry, schools.sf[nearest_school,] ) ),
)
install.packages('lwgeom')
library(lwgeom)
x <- fms_sample %>%
group_by( id ) %>%
mutate(nearest_school = st_nearest_feature( geometry, schools.sf ),
dist_school = as.numeric( st_distance( geometry, schools.sf[nearest_school,] ) ),
)
View(x)
x <- fms_sample %>%
group_by( id ) %>%
mutate(nearest_school = st_nearest_feature( geometry, schools.sf ),
distance_from _school = as.numeric( st_distance( geometry, schools.sf[nearest_school,] ) ),
)
x <- fms_sample %>%
group_by( id ) %>%
mutate(nearest_school = st_nearest_feature( geometry, schools.sf ),
distance_from _school = as.numeric( st_distance( geometry, schools.sf[nearest_school,] ) ),
)
x <- fms_sample %>%
group_by( id ) %>%
mutate(nearest_school = st_nearest_feature( geometry, schools.sf ),
distance_from_school = as.numeric( st_distance( geometry, schools.sf[nearest_school,] ) ),
)
x %>%
transmute(average_distance = mean(distance_from_school))
x %>%
select(distance_from_school) %>%
summarise(mean())
x %>%
select(distance_from_school) %>%
summarise(mean(.))
x %>%
select(distance_from_school) %>%
mean()
x %>%
select(distance_from_school) %>%
summarise()
x %>%
select(distance_from_school) %>%
summarise(mean = mean(distance_from_school))
x$distance_from_school
as.numeric(x$distance_from_school)
mean(as.numeric(x$distance_from_school))
mean(x$distance_from_school)
x$distance_from_school %>% mean()
remotes::install_github("RobertMyles/modelscript")
library(modelscript)
library(tidyverse)
